
'INCLUDE' = *group.cfg;

/*
'pe'        = 1;
'syn'       = 1;
*/

'wait-ping' = 800ms;
'mtpl-scan' = 10;



/*
 * A LITTLE guide to configurations.
 *
 *
 * COMMENTS
 * You can use comments for any notes in the config
 * that won't affect it in any way. To do this you
 * should use the characters,
 *
 * </><*> (start of comment) and <*></> (end of comment),
 *   everything between them nesca4
 *
 * will approve as a comment and will not read, as an
 * example, you are reading a comment now.
 *
 *
 * OPTIONS
 * To set any option in the config, you need to know their
 * syntax. This is '<flag_name>'=<value>;
 *
 * <flag_name> is the name of the flag, and <value> is the
 * value of its parameter that you assign. For example, for
 * the -random-ip flag with parameter 1000, the following
 * entry will appear on startup,
 *
 * nesca4 -random-ip 1000
 *
 * And in the config it will come out,
 * 'random-ip' = 1000;
 *
 * For options that do not have a parameter, it is either 1
 * (true) on or 0 (false) off. For example, in the startup
 * option -badsum will look like this,
 *
 * nesca4 -badsum
 *
 * In the config it would look like this,
 * 'badsum'=1;
 * To turn it off like this,
 * 'badsum'=0;
 *
 *
 * INCLUDE
 * If you need to, you can put one config into another, i.e.
 * merge them. To do this you can use the INCLUDE option,
 * the syntax is as follows,
 *
 * 'INCLUDE'=<filepath>;
 *
 * For example, to connect another config to the current config,
 * more precisely group.cfg. You need to use this entry,
 *
 * 'INCLUDE' = *group.cfg;
 *
 * The symbol (*) is a pointer to the current folder, without
 * it you would have to write,
 *
 * 'INCLUDE' = config/group.cfg;
 *
 *
 * SPECIAL
 * If you need to use simvol ; or ' or = or \ in a parameter
 * or option so that nesca4 does not consider them as configs,
 * you should write them after \, for example, \' \; \\ \=
 *
 *
 * SPACES
 * It's also worth saying that nesca4 doesn't care at all whether
 * you write options evenly or with 900+ spaces between them, i.e.
 * such writing is allowed,
 *
 * '
 * <name> '
 *          =
 * <val>
 * ;
 */
